from django.db import models
from django.contrib.auth.models import User
class Requester(models.Model):
	user = models.ForeignKey(User)
	name = models.CharField(max_length=250)
	surname = models.CharField(max_length=250)
	organization = models.CharField(max_length=250)
	
	def __str__(self):
		return "%s %s (%s)" % (self.name, self.surname, self.organization, )

class SatisfactionLevel(models.Model):
	level = models.IntegerField()
	def __str__(self):
		return str(self.level)

class DisSatisfactionType(models.Model):
	name = models.TextField()
	def __str__(self):
		return self.name

class Area(models.Model):
	name = models.TextField()
        def __str__(self):
                return self.name

class Level(models.Model):
        name = models.TextField()
        def __str__(self):
                return self.name

class Request(models.Model):
	requester = models.ForeignKey(Requester)
	question = models.TextField()
	submission_date = models.DateField()
	area = models.ForeignKey(Area)
	level = models.ForeignKey(Level)
	
	def __str__(self):
		return "%s - %s "%(self.requester, self.area)
	
class Response(models.Model):
	request = models.OneToOneField(Request, related_name="response")
	answer_date = models.DateField(blank=True, null=True)
	satisfaction = models.ForeignKey(SatisfactionLevel, blank=True, null=True)
	dissatisfaction_reason = models.ManyToManyField(DisSatisfactionType, blank=True, null=True)
	legal = models.BooleanField()
	legal_support = models.BooleanField()

	def __str__(self):
		return "%s => %s" % (self.request, self.satisfaction)

	def arrayize(self):
		return [self.requester.name, self.requester.surname, self.requester.organization, self.question, self.submission_date, self.answer_date, self.satisfaction, self.area, self.level, self.legal, self.legal_support]	
